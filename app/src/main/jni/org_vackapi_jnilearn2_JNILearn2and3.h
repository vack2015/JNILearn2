/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_vackapi_jnilearn2_JNILearn2and3 */

#ifndef _Included_org_vackapi_jnilearn2_JNILearn2and3
#define _Included_org_vackapi_jnilearn2_JNILearn2and3

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_vackapi_jnilearn2_JNILearn2and3
 * Method:    dataType
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_vackapi_jnilearn2_JNILearn2and3_dataType
        (JNIEnv *, jobject);

JNIEXPORT jstring JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_newJAVAString(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_java2CString(JNIEnv *env, jobject instance, jstring str_);

JNIEXPORT jintArray JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_operaArray123(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_operaArray4(JNIEnv *env, jobject instance,
                                                     jintArray array_);

JNIEXPORT void JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_createBuffer(JNIEnv *env, jobject instance) ;

JNIEXPORT void JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_getBuffer(JNIEnv *env, jobject instance, jobject obj);

JNIEXPORT void JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_useField(JNIEnv *env, jobject instance) ;

JNIEXPORT void JNICALL
Java_org_vackapi_jnilearn2_JNILearn2and3_useJavaMethod(JNIEnv *env, jobject instance);

}
#endif
#endif
